name: en_vars demo using environment variables in a reusable workflow
on:
  workflow_call
env:
  # vars defined here are availble to all jobs, however, value updates will be available only 
  # within the job where they are updated
  globalvar: globalvar_value
jobs:
  job1:
    name: j1 test env vars inside a job
    runs-on: ubuntu-latest
    env: 
      jobvar: jobvar_value
    steps:
      - name: test env variables
        env: 
          stepvar: stepvar_value
        run: |
         # inside a run, access env vars with or without env context
          echo $stepvar $jobvar $globalvar 
          echo ${{ env.stepvar }} ${{ env.jobvar }} ${{ env.globalvar }}
      - name: update env variables
      # these updates will be available only within the current job as we are saving in GITHUB_ENV
      # do not give any spaces across equal sign below
      # The updated values will be available in the next step, not this step
        run: |
          echo "stepvar=stepvar_new" >> $GITHUB_ENV
          echo "globalvar=globalvar_new" >> $GITHUB_ENV          
      - name: test updated env variables
        if: ${{ env.stepvar == 'stepvar_new' }} # we must accesss env vars using env context when outside a run
       # if: $stepvar == stepvar_new #     this will not work
       # if: ${{$stepvar == stepvar_new}} #     this will not work either
        run: |
          # inside a run we can access vars with or without env context
          echo $stepvar $jobvar $globalvar 
          echo ${{ env.stepvar }} ${{ env.jobvar }} ${{ env.globalvar }}   
  job2:
    name: j2 show env vars behaviour across jobs
    runs-on: ubuntu-latest
    steps:
      - name: test env variables
        run: |
          # stepvar and jobvar are not available acrosss jobs because each job executes in a clean environment
          # global variable is available but the update done in another job will not affect it.
          echo $stepvar $jobvar $globalvar 
          echo ${{ env.stepvar }} ${{ env.jobvar }} ${{ env.globalvar }} 
          echo done with reusable workflow       
